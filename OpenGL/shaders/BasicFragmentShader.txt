#version 410

in vec2 UV; 
in vec3 Position_worldspace; 
in vec3 Normal_cameraspace; 
in vec3 EyeDirection_cameraspace; 
in vec3 LightDirection_cameraspace; 

out vec3 color; 

uniform sampler2D myTextureSampler; 
uniform mat4 MV; 
uniform vec3 LightPosition_worldspace; 
uniform vec3 CameraPosition_worldspace;

void main() 
{ 
	vec3 n = normalize(Normal_cameraspace);
	vec3 l = normalize(LightDirection_cameraspace);
	color = clamp(dot(n,l),0,1) * vec3(1,0,0);

	//color = Position_worldspace;
}